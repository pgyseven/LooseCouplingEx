package pgy;

// 인터페이스(interface): 추상 클래스보다 더 추상적이며, 설계를 목적으로 만든다.
// 인터페이스에서 추상메서드와 상수만 존재할 수 있으면,  default  메서드도 존재할 수는 있다.

//실무에서는 인터페이스 팀장이 만들면 그 꼴로 두사원이 만들어서 규칙대로 인터페이스 상속받아 만들면 구개를 다 주입해서 해보고 고를 수 있다.
// 레포지토리 지우고 씀으로 만들어둔 구현체를 각각 써볼수 있다.

public interface ElectricDevice {
	public void powerOnOff();  //여긴 인터페이스라 abstract는 자동으로 생략되어 있을뿐 붙여도됨 public abstract void~~~ 

// 디폴트 메소드(이미 구현 완료된 메서드, 반드시 반환값이 있어야 한다. 자바 1.8에서 이미 구현되어 있음)도 인터페이스 내부에 있을 수 있다. 부모가 구현해서 자식에게 내려주는 개념이다. 코드의 중복도 막음 . 많이 쓰이진 않음 생물이라는 추상에라고 치면 살아서 숨쉰다라는 정도의 확실한 공통적인거라면 구현 가능 
//default String abc(int a) {
//	return null; 인터페이스는 자식이 많은 얘는 내가 구현할 수 있어라는 의미에서는 여기서 구현하여 쓴다. 스프링 부트에서는 많이 나온다.
//};

}
